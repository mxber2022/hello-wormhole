/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HelloWormholeProtections,
  HelloWormholeProtectionsInterface,
} from "../HelloWormholeProtections";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_wormholeRelayer",
        type: "address",
        internalType: "address",
      },
      {
        name: "_wormhole",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "latestGreeting",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quoteCrossChainGreeting",
    inputs: [
      {
        name: "targetChain",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [
      {
        name: "cost",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "receiveWormholeMessages",
    inputs: [
      {
        name: "payload",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "",
        type: "bytes[]",
        internalType: "bytes[]",
      },
      {
        name: "sourceAddress",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "sourceChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "sendCrossChainGreeting",
    inputs: [
      {
        name: "targetChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "targetAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "greeting",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "setRegisteredSender",
    inputs: [
      {
        name: "sourceChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "sourceAddress",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "wormhole",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IWormhole",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "wormholeRelayer",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IWormholeRelayer",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "GreetingReceived",
    inputs: [
      {
        name: "greeting",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "senderChain",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610cb0380380610cb083398101604081905261002f91610074565b6001600160a01b039182166080521660a052600080546001600160a01b031916331790556100a7565b80516001600160a01b038116811461006f57600080fd5b919050565b6000806040838503121561008757600080fd5b61009083610058565b915061009e60208401610058565b90509250929050565b60805160a051610bd06100e0600039600060e2015260008181610150015281816101ad01528181610299015261031d0152610bd06000f3fe6080604052600436106100705760003560e01c806384acd1bb1161004e57806384acd1bb146100d0578063921b58a91461011c578063da25b7251461013e578063dd12d68b1461017257600080fd5b80630f4b629a1461007557806328bd75ce1461008a578063529dca32146100bd575b600080fd5b6100886100833660046106ef565b610192565b005b34801561009657600080fd5b506100aa6100a5366004610763565b61026e565b6040519081526020015b60405180910390f35b6100886100cb3660046107a5565b610312565b3480156100dc57600080fd5b506101047f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100b4565b34801561012857600080fd5b5061013161046f565b6040516100b4919061090a565b34801561014a57600080fd5b506101047f000000000000000000000000000000000000000000000000000000000000000081565b34801561017e57600080fd5b5061008861018d36600461091d565b6104fd565b600061019d8461026e565b90508034146101ab57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638fecdd0282868686336040516020016101f0929190610947565b604051602081830303815290604052600061c3506040518763ffffffff1660e01b8152600401610224959493929190610971565b60206040518083038185885af1158015610242573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061026791906109b3565b5050505050565b60405163c23ee3c360e01b815261ffff8216600482015260006024820181905261c3506044830152907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c23ee3c3906064016040805180830381865afa1580156102e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030b91906109dd565b5092915050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461039a5760405162461bcd60e51b815260206004820152602260248201527f4d73672e73656e646572206973206e6f7420576f726d686f6c652052656c617960448201526132b960f11b60648201526084015b60405180910390fd5b61ffff82166000908152600160205260409020548290849081146103f85760405162461bcd60e51b81526020600482015260156024820152742737ba103932b3b4b9ba32b932b21039b2b73232b960591b6044820152606401610391565b6000808880602001905181019061040f9190610a01565b8151919350915061042790600290602085019061057a565b507f5c4ab0cfb98525b63324629eb8c98352dec2bece203410170311b784050546766002878360405161045c93929190610ac9565b60405180910390a1505050505050505050565b6002805461047c90610a8f565b80601f01602080910402602001604051908101604052809291908181526020018280546104a890610a8f565b80156104f55780601f106104ca576101008083540402835291602001916104f5565b820191906000526020600020905b8154815290600101906020018083116104d857829003601f168201915b505050505081565b6000546001600160a01b031633146105635760405162461bcd60e51b8152602060048201526024808201527f4e6f7420616c6c6f77656420746f207365742072656769737465726564207365604482015263373232b960e11b6064820152608401610391565b61ffff909116600090815260016020526040902055565b82805461058690610a8f565b90600052602060002090601f0160209004810192826105a857600085556105ee565b82601f106105c157805160ff19168380011785556105ee565b828001600101855582156105ee579182015b828111156105ee5782518255916020019190600101906105d3565b506105fa9291506105fe565b5090565b5b808211156105fa57600081556001016105ff565b803561ffff8116811461062557600080fd5b919050565b6001600160a01b038116811461063f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561068157610681610642565b604052919050565b600067ffffffffffffffff8211156106a3576106a3610642565b50601f01601f191660200190565b60006106c46106bf84610689565b610658565b90508281528383830111156106d857600080fd5b828260208301376000602084830101529392505050565b60008060006060848603121561070457600080fd5b61070d84610613565b9250602084013561071d8161062a565b9150604084013567ffffffffffffffff81111561073957600080fd5b8401601f8101861361074a57600080fd5b610759868235602084016106b1565b9150509250925092565b60006020828403121561077557600080fd5b61077e82610613565b9392505050565b600082601f83011261079657600080fd5b61077e838335602085016106b1565b600080600080600060a086880312156107bd57600080fd5b853567ffffffffffffffff808211156107d557600080fd5b6107e189838a01610785565b96506020915081880135818111156107f857600080fd5b8801601f81018a1361080957600080fd5b80358281111561081b5761081b610642565b8060051b61082a858201610658565b918252828101850191858101908d84111561084457600080fd5b86850192505b83831015610880578235868111156108625760008081fd5b6108708f8983890101610785565b835250918601919086019061084a565b809a50505050505050506040860135925061089d60608701610613565b949793965091946080013592915050565b60005b838110156108c95781810151838201526020016108b1565b838111156108d8576000848401525b50505050565b600081518084526108f68160208601602086016108ae565b601f01601f19169290920160200192915050565b60208152600061077e60208301846108de565b6000806040838503121561093057600080fd5b61093983610613565b946020939093013593505050565b60408152600061095a60408301856108de565b905060018060a01b03831660208301529392505050565b61ffff861681526001600160a01b038516602082015260a06040820181905260009061099f908301866108de565b606083019490945250608001529392505050565b6000602082840312156109c557600080fd5b815167ffffffffffffffff8116811461077e57600080fd5b600080604083850312156109f057600080fd5b505080516020909101519092909150565b60008060408385031215610a1457600080fd5b825167ffffffffffffffff811115610a2b57600080fd5b8301601f81018513610a3c57600080fd5b8051610a4a6106bf82610689565b818152866020838501011115610a5f57600080fd5b610a708260208301602086016108ae565b8094505050506020830151610a848161062a565b809150509250929050565b600181811c90821680610aa357607f821691505b602082108103610ac357634e487b7160e01b600052602260045260246000fd5b50919050565b60608152600080855481600182811c915080831680610ae957607f831692505b60208084108203610b0857634e487b7160e01b86526022600452602486fd5b6060880184905260808801828015610b275760018114610b3857610b63565b60ff19871682528282019750610b63565b60008d81526020902060005b87811015610b5d57815484820152908601908401610b44565b83019850505b5050859650610b778189018b61ffff169052565b505050505050610b9260408301846001600160a01b03169052565b94935050505056fea26469706673582212207543f75ed0e116b03b95f291185f79eaaca52dbea3292fa4dcc69ab58faccdcc64736f6c634300080d0033";

type HelloWormholeProtectionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelloWormholeProtectionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HelloWormholeProtections__factory extends ContractFactory {
  constructor(...args: HelloWormholeProtectionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _wormholeRelayer: string,
    _wormhole: string,
    overrides?: Overrides & { from?: string }
  ): Promise<HelloWormholeProtections> {
    return super.deploy(
      _wormholeRelayer,
      _wormhole,
      overrides || {}
    ) as Promise<HelloWormholeProtections>;
  }
  override getDeployTransaction(
    _wormholeRelayer: string,
    _wormhole: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _wormholeRelayer,
      _wormhole,
      overrides || {}
    );
  }
  override attach(address: string): HelloWormholeProtections {
    return super.attach(address) as HelloWormholeProtections;
  }
  override connect(signer: Signer): HelloWormholeProtections__factory {
    return super.connect(signer) as HelloWormholeProtections__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelloWormholeProtectionsInterface {
    return new utils.Interface(_abi) as HelloWormholeProtectionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HelloWormholeProtections {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as HelloWormholeProtections;
  }
}
